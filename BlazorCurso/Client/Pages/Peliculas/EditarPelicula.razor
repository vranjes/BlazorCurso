@page  "/peliculas/editar/{PeliculaId:int}"
@inject IRepositorio _repositorio
@inject IMostrarMensajes _mostrarMensajes
@inject NavigationManager _navigationManager

<h3>Editar Pelicula</h3>

@if (pelicula != null)
{
    <FormularioPeliculas pelicula="pelicula" OnValidSubmit="GuardarCambios"
                         GenerosSeleccionados="GenerosSeleccionados" GenerosNoSeleccionados="GenerosNoSeleccionados"
                         ActoresSeleccionados="ActoresSeleccionados">
    </FormularioPeliculas>
}
else
{
    <text>Cargando...</text>
}


@code {
    [Parameter] public int PeliculaId { get; set; }
    private List<Genero> GenerosSeleccionados = new List<Genero>();
    private List<Genero> GenerosNoSeleccionados =  new List<Genero>();
    private List<Persona> ActoresSeleccionados =  new List<Persona>();
    private Pelicula pelicula;

    private async Task GuardarCambios()
    {
        var responseHttp = await _repositorio.Put("api/peliculas", pelicula);

        if (responseHttp.Error)
        {
            await _mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
        }
        else
        {
            _navigationManager.NavigateTo($"pelicula/{pelicula.Id}/{pelicula.Titulo.Replace(" ", "-")}");
        }
    }

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await _repositorio.Get<EditarPeliculaDTO>($"api/peliculas/actualizar/{PeliculaId}");

        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                _navigationManager.NavigateTo("");
            }
            else
            {
                await _mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
            }
        }
        else
        {
            var model = responseHttp.Response;
            pelicula = model.Pelicula;
            GenerosSeleccionados = model.GenerosSeleccionados;
            GenerosNoSeleccionados = model.GenerosNoSeleccionados;
            ActoresSeleccionados = model.ActoresSeleccionados;
        }
    }
}
