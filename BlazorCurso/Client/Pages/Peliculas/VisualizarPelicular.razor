@page "/pelicula/{PeliculaId:int}/{NombrePelicula}"
@page "/pelicula/{NombrePelicula}"

@inject IRepositorio _repositorio
@inject IMostrarMensajes _mostrarMensajes
@inject NavigationManager _navigationManager

@if (model == null)
{
    <text>Cargando...</text>
}
else
{
    <h2>@model.Pelicula.Titulo (@model.Pelicula.Lanzamiento.Value.ToString("yyyy"))</h2>
    for (int i = 0; i < model.Generos.Count; i++)
    {
        if (i < model.Generos.Count - 1)
        {
            @enlaceGenero(model.Generos[i])<text>,</text>
        }
        else
        {
            @enlaceGenero(model.Generos[i])
        }

    }
    <text> | </text> <span>@model.Pelicula.Lanzamiento.Value.ToString("dd MMM yyyy")</span>
    <text> | Promedio: </text> @model.PromedioVotos.ToString("0.#") <text>/5 | Tu voto: </text> @model.VotoUsuario.ToString("0.#")
    <div style="display: flex;">
        <span style="display: inline-block; margin-right: 5px;"><img src="@model.Pelicula.Poster" style="width: 225px; height: 315px" /></span>
        <iframe width="560" height="315" src="https://www.youtube.com/embed/@model.Pelicula.Trailer" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>
    <div style="margin-top: 10px;">
        <h3>Resumen</h3>
        <div>
            <MostrarMarkDown ContenidoMarkdown="@model.Pelicula.Resumen"></MostrarMarkDown>
        </div>
    </div>
    <div style="margin-top: 10px;">
        <h3>Actores</h3>
        <div style="display: flex; flex-direction: column">
            @foreach (var actor in model.Actores)
            {
                <div style="margin-bottom: 2px;">
                    <img style="width: 50px;" src="@actor.Foto" />
                    <span style="display:inline-block;width: 200px;"><a href="/persona/@actor.Id/@actor.Nombre.Replace(" ", "-")">@actor.Nombre</a></span>
                    <span style="display:inline-block; width: 45px;">...</span>
                    <span>@actor.Personaje</span>
                </div>
            }
        </div>
    </div>
}
@code {
    [Parameter] public int PeliculaId { get; set; }
    [Parameter] public string NombrePelicula { get; set; }
    private PelicularVisualizarDTO model;
    private RenderFragment<Genero> enlaceGenero = (genero) =>@<a href="peliculas/buscar?generoid=@genero.Id">@genero.Nombre</a>;

protected async override Task OnInitializedAsync()
{
var responseHtpp = await _repositorio.Get<PelicularVisualizarDTO>($"api/peliculas/{PeliculaId}");

if (responseHtpp.Error)
{
if (responseHtpp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
{
_navigationManager.NavigateTo("");
}
else
{
var mensajeError = await responseHtpp.GetBody();
await _mostrarMensajes.MostrarMensajeError(mensajeError);
}
}
else
{
model = responseHtpp.Response;
}

}
}
